/* automatically generated by rust-bindgen */

pub type uchar = ::std::os::raw::c_uchar;
pub type int32 = i32;
pub type decimal_digit_t = int32;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct decimal_t {
    pub intg: ::std::os::raw::c_int,
    pub frac: ::std::os::raw::c_int,
    pub len: ::std::os::raw::c_int,
    pub sign: bool,
    pub buf: *mut decimal_digit_t,
}
#[test]
fn bindgen_test_layout_decimal_t() {
    assert_eq!(
        ::core::mem::size_of::<decimal_t>(),
        24usize,
        concat!("Size of: ", stringify!(decimal_t))
    );
    assert_eq!(
        ::core::mem::align_of::<decimal_t>(),
        8usize,
        concat!("Alignment of ", stringify!(decimal_t))
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<decimal_t>())).intg as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(decimal_t),
            "::",
            stringify!(intg)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<decimal_t>())).frac as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(decimal_t),
            "::",
            stringify!(frac)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<decimal_t>())).len as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(decimal_t),
            "::",
            stringify!(len)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<decimal_t>())).sign as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(decimal_t),
            "::",
            stringify!(sign)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<decimal_t>())).buf as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(decimal_t),
            "::",
            stringify!(buf)
        )
    );
}
extern "C" {
    pub fn c_string2decimal(
        from: *const ::std::os::raw::c_char,
        to: *mut decimal_t,
        end: *mut *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn c_decimal2string(
        from: *const decimal_t,
        to: *mut ::std::os::raw::c_char,
        to_len: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn c_decimal2bin(
        from: *const decimal_t,
        to: *mut uchar,
        precision: ::std::os::raw::c_int,
        scale: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn c_bin2decimal(
        from: *const uchar,
        to: *mut decimal_t,
        precision: ::std::os::raw::c_int,
        scale: ::std::os::raw::c_int,
        keep_prec: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn c_decimal_bin_size(
        precision: ::std::os::raw::c_int,
        scale: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
